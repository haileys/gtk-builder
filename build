#!/usr/bin/env bash
set -euo pipefail

cd "$(dirname "$0")"
source lib/init.sh

build-project() {
    local project="$1"
    local project_dir="$BUILD_DIR/$project"

    mkdir -p "$project_dir"

    log "Building $project"
    (
        local submodules="$(pwd)/submodules"

        source lib/build/init.sh
        source "projects/${project}.sh"

        cd "$project_dir"
        mkdir -p build

        log "Preparing $project $version"
        invoke-project-function prepare

        log "Configuring $project $version"
        invoke-project-function configure

        log "Building $project $version"
        invoke-project-function build

        log "Installing $project $version"
        invoke-project-function install
    )
}

invoke-project-function() {
    local func="$1"
    [[ "$(type -t "$func")" == "function" ]] || die "$func is not a function"
    ( "$func" )
}

load-recipe

mkdir -p "$TARGET_DIR"

if [ "$#" == 0 ]; then
    echo "specify project to build or 'all'" >&2
    exit 1
fi

if [[ "$1" == "all" ]]; then
    [[ "$(type -t recipe-default-build)" == "function" ]] ||
        die "recipe-default-build not defined, cannot build all. Did you load a recipe?"

    recipe-default-build
else
    build-project "$1"
fi
